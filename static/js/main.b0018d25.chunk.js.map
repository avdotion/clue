{"version":3,"sources":["utils/crypto.ts","widgets/textboxes.tsx","widgets/switch.tsx","widgets/protection-bar.tsx","widgets/layout.tsx","entities/indents.ts","utils/colorParser.ts","entities/palette.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["HASH_FUNCTIONS","CryptoES","MD5","SHA3","defaultTextBoxStyle","InnerInput","React","forwardRef","ref","type","onChange","value","e","target","Input","inputElement","useRef","current","focus","MasterPasswordInput","DomainNameInput","SaltedPassword","hashFunctionName","secretData","hashMethodName","isAutoCopyEnabled","hash","autoCopy","masterPassword","domainName","optionalSalt","length","hashedPassword","navigator","clipboard","writeText","saltThePassword","rawMessage","toString","enc","Base64","replace","slice","checkBoxStyles","wrapper","clickablePannel","Option","active","label","onClick","Slider","options","onSlide","map","option","index","Trigger","onTrigger","disabled","disabledAlert","EMOJI_LIST","emoji","lettersWeightedSum","split","reduce","acc","cur","charCodeAt","DataVisualizationBar","Array","fill","Label","text","defaultMargin","Section","title","style","children","INDENTS","rootElement","document","querySelector","HSL","h","s","l","c","Math","abs","x","m","r","g","b","round","COLOR_PALETTE","dark","light","HASH_METHODS","Object","keys","useDayLightTheme","isNightTime","matchMedia","matches","useState","theme","setTheme","useEffect","addListener","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","setMasterPassword","setDomainName","setOptionalSalt","localStorage","getItem","hashMethod","setHashMethod","setItem","setAutoCopy","paletteId","colorScheme","entries","forEach","entity","color","setProperty","indent","i","newValue","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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AAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,SAAI,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,gBAGpkDC,EAAQ,SAAClD,GACb,IAAMmD,EAAqBnD,EAAMoD,MAAM,IAAIC,QACzC,SAACC,EAAKC,EAAKX,GAAX,OACEU,EAAMC,EAAIC,WAAW,GAAKZ,IAAO,GACrC,OAAOK,EAAWE,EAAqBF,EAAW7B,S,kNAOvCqC,EAAwC,SAAC,GAAD,QACnD7C,WACEK,EAFiD,EAEjDA,eACAC,EAHiD,EAGjDA,WACAC,EAJiD,EAIjDA,aAJiD,OAMxC,KAAM,mBASjB,iEACqB,KAAnBF,EACE,IAAIyC,MAAM,GAAGC,KA9BG,gBA+BD,KAAfzC,EACE,CACAgC,EAAMjC,GAjCQ,+BAqCd,CACEiC,EAAMjC,GACNiC,EAAMhC,EAAaC,GACnB+B,EAAM/B,EAAeD,EAAa,c,iLCvC/B0C,EAAyB,SAAC,GAAD,IACpCC,EADoC,EACpCA,KADoC,OAIhC,KAAM,mBAMV,+DACGA,MAICC,GAAa,kH,oNAMNC,EAAU,SAAC,GAAD,IACrBC,EADqB,EACrBA,MADqB,IAErBC,aAFqB,MAEbH,EAFa,EAGrBI,EAHqB,EAGrBA,SAHqB,OAQjB,KAAM,iBAACD,IAOX,6DAEID,GAAS,kBAAC,EAAD,4BAAaA,KAEvBE,MChDCC,EAAU,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAEjCC,EAAcC,SAASC,cAAc,SCA9BC,EAAM,SAACC,EAAWC,EAAWC,GACxCD,GAAK,IACLC,GAAK,IAEL,IAAIC,GAAK,EAAIC,KAAKC,IAAI,EAAIH,EAAI,IAAMD,EAChCK,EAAIH,GAAK,EAAIC,KAAKC,IAAKL,EAAI,GAAM,EAAI,IACrCO,EAAIL,EAAIC,EAAE,EACVK,EAAI,EACJC,EAAI,EACJC,EAAI,EAyCR,OAvCI,GAAKV,GAAKA,EAAI,IAChBQ,EAAIL,EAAGM,EAAIH,EAAGI,EAAI,GACT,IAAMV,GAAKA,EAAI,KACxBQ,EAAIF,EAAGG,EAAIN,EAAGO,EAAI,GACT,KAAOV,GAAKA,EAAI,KACzBQ,EAAI,EAAGC,EAAIN,EAAGO,EAAIJ,GACT,KAAON,GAAKA,EAAI,KACzBQ,EAAI,EAAGC,EAAIH,EAAGI,EAAIP,GACT,KAAOH,GAAKA,EAAI,KACzBQ,EAAIF,EAAGG,EAAI,EAAGC,EAAIP,GACT,KAAOH,GAAKA,EAAI,MACzBQ,EAAIL,EAAGM,EAAI,EAAGC,EAAIJ,GAIpBE,EAAIJ,KAAKO,MAAgB,KAATH,EAAID,IAAUpD,SAAS,IAEvCsD,EAAIL,KAAKO,MAAgB,KAATF,EAAIF,IAAUpD,SAAS,IAEvCuD,EAAIN,KAAKO,MAAgB,KAATD,EAAIH,IAAUpD,SAAS,IAGtB,IAAbqD,EAAE5D,SAEJ4D,EAAI,IAAMA,GAIK,IAAbC,EAAE7D,SAEJ6D,EAAI,IAAMA,GAIK,IAAbC,EAAE9D,SAEJ8D,EAAI,IAAMA,GAGL,IAAMF,EAAIC,EAAIC,GClDjBE,EAAgB,CACpB,mBAAoB,CAClBC,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,4BAA6B,CAC3Bc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,kBAAmB,CACjBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,sBAAuB,CACrBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,qBAAsB,CACpBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,2BAA4B,CAC1Bc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,2BAA4B,CAC1Bc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,mBAAoB,CAClBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,wBAAyB,CACvBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,6BAA8B,CAC5Bc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,uBAAwB,CACtBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,sBAAuB,CACrBc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,4BAA6B,CAC3Bc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,KAEnB,2BAA4B,CAC1Bc,KAAMd,EAAI,EAAG,EAAG,IAChBe,MAAOf,EAAI,EAAG,EAAG,MAIfH,EAAcC,SAASC,cAAc,SC3CrCiB,EAAeC,OAAOC,KAAKpG,G,svCAoJ3BqG,EAAmB,WACvB,IAAMC,EAAcC,WAAW,gCAAgCC,QADlC,EAEHC,mBACxBH,EAAc,OAAS,SAHI,mBAEtBI,EAFsB,KAEfC,EAFe,KAgB7B,OAVAC,qBAAU,WACRL,WAAW,gCAAgCM,aACzC,SAAAjG,GAAC,OAAIA,EAAE4F,SAAWG,EAAS,WAG7BJ,WAAW,iCAAiCM,aAC1C,SAAAjG,GAAC,OAAIA,EAAE4F,SAAWG,EAAS,eAIxBD,GC1KHI,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCrF,UAAUsF,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf9F,UAAUsF,cAAcS,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCjGjEC,IAASC,OAAO,mBFaa,WAAO,IAAD,EACW/B,mBAAiB,IAD5B,mBAC1B7E,EAD0B,KACV6G,EADU,OAEGhC,mBAAiB,IAFpB,mBAE1B5E,EAF0B,KAEd6G,EAFc,OAGOjC,mBAAiB,IAHxB,mBAG1B3E,EAH0B,KAGZ6G,EAHY,OAKGlC,mBAClCmC,aAAaC,QAAQ,eRtBoB,QQgBV,mBAK1BC,EAL0B,KAKdC,EALc,KAQjCnC,qBAAU,WAAQgC,aAAaI,QAAQ,aAAcF,MARpB,MAYQrC,mBAFA,YAGvCmC,aAAaC,QAAQ,cAA2B,GAbjB,mBAY1BpH,EAZ0B,KAYPwH,EAZO,KAejCrC,qBAAU,WACRgC,aAAaI,QAAQ,WAAuBvH,EANL,UAAZ,eAS7B,IDwB8ByH,ECxBxBC,EAAc9C,IAKpB,ODmB8B6C,ECvBdC,EDwBhBhD,OAAOiD,QAAQrD,GAAesD,SAC5B,YAA2B,IAAD,mBAAxBC,EAAwB,KAGlBC,EAHkB,KAGCL,GAEzBnE,EAAYH,MAAM4E,YAAlB,YAAmCF,GAAUC,MFlEjDzE,EAAQuE,SAAQ,SAACI,EAAQC,GAEvB3E,EAAYH,MAAM4E,YAAlB,kBAAyCE,EAAE,GAA3C,UAAmDD,EAAnD,UGsCK,KAAM,mBAuDX,yEACE,mEACE,8DACE,8EAA6B,8CACtB,kCADsB,OAEpB,SAFoB,IAGvB,wBAHuB,YAM/B,mEACE,kBAAC,EAAD,+BAAe,oBACb,kBAAC,EAAD,2CACS7H,EADT,SAEY,SAAC+H,GAAuBlB,EAAkBkB,QAGxD,kBAAC,EAAD,+BAAe,gBACb,kBAAC,EAAD,uCACS9H,EADT,SAEY,SAAC8H,GAAuBjB,EAAciB,QAGpD,kBAAC,EAAD,+BAAe,oBACb,kBAAC,EAAD,yCACS7H,EADT,SAEY,SAAC6H,GAAuBhB,EAAgBgB,QAGtD,kBAAC,EAAD,iCACE,kBAAC,EAAD,gCACWzD,EADX,MAES4C,EAFT,QAGW,SAACa,GAAuBZ,EAAcY,OAEjD,kBAAC,EAAD,+BACS,WADT,SAEY5C,SAAS9E,UAAUC,WAF/B,cAGiB,2CAHjB,OAIUT,EAJV,UAKa,SAACkI,GAAeV,EAAYU,QAG3C,kBAAC,EAAD,iCACE,kBAAC,EAAD,iDACc,CAAC/H,iBAAgBC,aAAYC,oBAG7C,kBAAC,EAAD,+BACQ,kBADR,+GAQE,kBAAC,EAAD,2CACc,CAACF,iBAAgBC,aAAYC,gBAD3C,eAEkBgH,EAFlB,kBAGqBrH,aEtJjB,MAASuD,SAAS4E,eAAe,SDoB1C,SAAkBtC,GACvB,GAA6C,kBAAmBrF,UAAW,CAMzE,GAJkB,IAAI4H,IACnBC,QACD9C,OAAOC,SAAS8C,MAEJC,SAAWhD,OAAOC,SAAS+C,OAIvC,OAGFhD,OAAOiD,iBAAiB,QAAQ,WAC9B,IAAM5C,EAAK,UAAMyC,QAAN,sBAEPhD,IAgEV,SAAiCO,EAAeC,GAE9C4C,MAAM7C,GACHI,MAAK,SAAA0C,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CvI,UAAUsF,cAAckD,MAAMhD,MAAK,SAAAC,GACjCA,EAAagD,aAAajD,MAAK,WAC7BT,OAAOC,SAAS0D,eAKpBvD,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFA0C,CAAwBvD,EAAOC,GAI/BrF,UAAUsF,cAAckD,MAAMhD,MAAK,WACjCQ,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OC9C/BC,I","file":"static/js/main.b0018d25.chunk.js","sourcesContent":["// @ts-ignore\nimport CryptoES from 'crypto-es';\n\nconst DEFAULT_HASH_LENGTH: number = 20;\nexport const DEFAULT_HASH_FUNCTION: string = 'SHA3';\nexport const HASH_FUNCTIONS = {\n  'MD5': CryptoES.MD5,\n  'SHA3': CryptoES.SHA3,\n};\n\nexport const prepareHash = (hashFunctionName: string) => (rawMessage: string) =>\n  // @ts-ignore\n  HASH_FUNCTIONS[hashFunctionName](rawMessage)\n      .toString(CryptoES.enc.Base64)\n      .replace(/=+$/, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .slice(0, DEFAULT_HASH_LENGTH);\n","import React, {useRef} from 'react';\n// @ts-ignore\nimport styled, {use, css} from 'reshadow/macro';\n\nimport {SecretData} from  './../entities/secretData';\nimport {prepareHash} from './../utils/crypto';\n\ntype InputProps = {\n  onChange: (value: string) => void,\n  value: string,\n};\n\nconst defaultTextBoxStyle = css`\n  |wrapper {\n    padding: var(--indent2) var(--indent5);\n    border-radius: 5px;\n    background-color: var(--input-default-color);\n    width: 100%;\n    display: flex;\n    overflow: hidden;\n    font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas,\n      'Courier New', monospace;\n    font-weight: 500;\n  }\n`;\n\nconst InnerInput = React.forwardRef<{\n    type?: string,\n    onChange?: (value: string) => void,\n    value: string,\n  }, HTMLInputElement>(({\n  type = 'text',\n  // @ts-ignore\n  onChange,\n  value,\n}, ref) => styled`\n  input {\n    line-height: 1.6em;\n    outline: none;\n    background: none;\n    border: 0;\n    color: var(--input-default-text-color);\n    align-items: center;\n    width: 100%;\n  }\n`(\n  <input\n    type={type}\n    onChange={onChange && (e => onChange(e.target.value))}\n    // @ts-ignore\n    ref={ref}\n    value={value}\n    spellCheck={false}\n  />\n));\n\nexport const Input: React.FC<InputProps> = ({\n  onChange,\n  value,\n}: InputProps) => {\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  return styled(\n    defaultTextBoxStyle\n  )(\n    <use.wrapper onClick={() => {\n      inputElement.current && inputElement.current.focus();\n    }}>\n      {\n        // @ts-ignore\n        <InnerInput\n          onChange={onChange}\n          value={value}\n          ref={inputElement}\n        />\n      }\n    </use.wrapper>\n  );\n};\n\nexport const MasterPasswordInput: React.FC<InputProps> = ({\n  onChange,\n  value,\n}: InputProps) => {\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  return styled(\n    defaultTextBoxStyle\n  )(\n    <use.wrapper onClick={() => {\n        inputElement.current && inputElement.current.focus();\n      }}>\n      {\n        // @ts-ignore\n        <InnerInput\n          type='password'\n          onChange={onChange}\n          value={value}\n          ref={inputElement}\n        />\n      }\n    </use.wrapper>\n  );\n};\n\nexport const DomainNameInput: React.FC<InputProps> = ({\n  onChange,\n  value,\n}: InputProps) => {\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  return styled(\n    defaultTextBoxStyle\n  )`\n    span {\n      line-height: 1.6em;\n      color: var(--input-neutral-text-color);\n    }\n  `(\n    <use.wrapper onClick={() => {\n        inputElement.current && inputElement.current.focus();\n      }}>\n        <span>https://</span>\n        {\n          // @ts-ignore\n          <InnerInput\n            onChange={onChange}\n            value={value}\n            ref={inputElement}\n          />\n        }\n    </use.wrapper>\n  );\n};\n\nconst saltThePassword = (\n  secretData: SecretData,\n  hash: (arg0: string) => string,\n  autoCopy: boolean\n): string => {\n  const {masterPassword, domainName, optionalSalt} = secretData;\n\n  if (masterPassword.length === 0) {\n    return '';\n  }\n\n  const hashedPassword = hash(masterPassword + domainName + optionalSalt);\n\n  if (autoCopy) {\n    navigator.clipboard.writeText(hashedPassword);\n  }\n\n  return hashedPassword;\n};\n\ntype SaltedPasswordProps = {\n  secretData: SecretData,\n  hashMethodName: string,\n  isAutoCopyEnabled: boolean,\n};\n\nexport const SaltedPassword: React.FC<SaltedPasswordProps> = ({\n  secretData,\n  hashMethodName,\n  isAutoCopyEnabled,\n}: SaltedPasswordProps) => styled(\n  defaultTextBoxStyle\n)`\n  |wrapper {\n    background-color: var(--salted-password-color);\n    color: var(--salted-password-text-color);\n    justify-content: center;\n  }\n  span {\n    min-height: 1.6em;\n    line-height: 1.6em;\n  }\n`(\n  <use.wrapper>\n    <span>\n      {\n        saltThePassword(\n          secretData,\n          prepareHash(hashMethodName),\n          isAutoCopyEnabled\n        )\n      }\n    </span>\n  </use.wrapper>\n);\n","import React from 'react';\n// @ts-ignore\nimport styled, {use, css} from 'reshadow/macro';\n\nconst checkBoxStyles = {\n  wrapper: css`\n    |wrapper {\n      text-transform: uppercase;\n      font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas,\n        'Courier New', monospace;\n      font-weight: 500;\n      border-radius: 5px;\n      display: inline-block;\n      cursor: pointer;\n      background-color: var(--slider-default-color);\n      user-select: none;\n      margin-bottom: var(--indent4);\n    }\n  `,\n  clickablePannel: css`\n    |pane {\n      padding: var(--indent1) var(--indent4);\n      line-height: 1.6em;\n      display: inline-block;\n      border-radius: 5px;\n      color: var(--input-neutral-text-color);\n    }\n\n    |pane[active] {\n      background-color: var(--slider-active-color);\n      color: var(--slider-active-text-color);\n    }\n  `,\n};\n\ntype OptionProps = ({\n  active: boolean,\n  label: string,\n  onClick: (option: string) => void,\n});\n\nconst Option: React.FC<OptionProps> = ({\n  active = false,\n  label,\n  onClick,\n}: OptionProps) => styled(\n  checkBoxStyles.clickablePannel\n)`\n  |pane[active] {\n    cursor: default;\n  }\n`(\n  <use.pane\n    active={active}\n    onClick={() => { onClick(label); }}\n  >\n    {label}\n  </use.pane>\n);\n\ntype SliderProps = {\n  value: string,\n  options: string[],\n  onSlide: (option: string) => void,\n};\n\nexport const Slider: React.FC<SliderProps> = ({\n  options,\n  value,\n  onSlide,\n}: SliderProps) => {\n  return styled(\n    checkBoxStyles.wrapper\n  )``(\n    <use.wrapper>\n      {\n        options.map((option, index) => (\n          <Option\n            key={index}\n            active={option === value}\n            label={option}\n            onClick={onSlide}\n          />\n        ))\n      }\n    </use.wrapper>\n  );\n};\n\ntype TriggerProps = {\n  disabled: boolean,\n  disabledAlert: string,\n  label: string,\n  active: boolean,\n  onTrigger: (value: boolean) => void,\n};\n\nexport const Trigger: React.FC<TriggerProps> = ({\n  label,\n  onTrigger,\n  active,\n  disabled,\n  disabledAlert,\n}: TriggerProps) => styled(\n  checkBoxStyles.wrapper,\n  checkBoxStyles.clickablePannel\n)`\n|pane[disabled] {\n  cursor: not-allowed;\n}\n`(\n  <use.wrapper>\n    <use.pane\n      active={active && !disabled}\n      disabled={disabled}\n      onClick={() => { !disabled && onTrigger(!active); }}\n      title={disabled ? disabledAlert : ''}\n    >\n      {active ? label + ' Enabled' : label + ' Disabled'}\n    </use.pane>\n  </use.wrapper>\n);\n","import React from 'react';\n// @ts-ignore\nimport styled, {use} from 'reshadow/macro';\nimport {SecretData} from './../entities/secretData';\n\n// eslint-disable-next-line max-len\nconst EMOJI_LIST = ['😺','😸','😹','😻','😼','😽','🙀','😿','😾','🙈','🙉','🦝','🐵','🐒','🦍','🐶','🐕','🐩','🐺','🦊','🐱','🐈','🦁','🐯','🐅','🐆','🐴','🐎','🦄','🦓','🦌','🐮','🐂','🦙','🐃','🐄','🐷','🦛','🐖','🐗','🐽','🐏','🐑','🐐','🐪','🐫','🦒','🐘','🦏','🐭','🐁','🐀','🦘','🐹','🦡','🐰','🐇','🐿','🦔','🦇','🐻','🐨','🐼','🐾','🦃','🐔','🦢','🐓','🐣','🐤','🦚','🐥','🐦','🦜','🐧','🕊','🦅','🦆','🦉','🐸','🐊','🐢','🦎','🐍','🐲','🐉','🦕','🦖','🐳','🐋','🐬','🐟','🐠','🐡','🦈','🐙','🐚','🦀','🦟','🦐','🦠','🦑','🐌','🦋','🐛','🐜','🐝','🐞','🦗','🕷','🕸', '🦂','🦞','🌸','💮','🏵','🌹','🥀','🌺','🌻','🌼','🌷','🌱','🌲','🌳','🌴','🌵','🌾','🌿','☘','🍀','🍁','🍂','🍃','🍄','💅','👓','🕶','👔','👕','👖','🧣','🧤','🧥','🧦','👗','👘','👙','👚','👛','👜','👝','🛍','🎒','👞','👟','👠','👡','👢','👑','👒','🎩','🎓','🧢','⛑','📿','💄','🌂','☂','🎽','🥽','🥼','🥾','🥿','🧺','🚂','🚃','🚄','🚅','🚆','🚇','🚈','🚉','🚊','🚝','🚞','🚋','🚌','🚍','🚎','🚐','🚑','🚒','🚓','🚔','🚕','🚖','🚗','🚘','🚙','🚚','🚛','🚜','🚲','🛴','🛵','🚏','🛣','🛤','⛵','🛶','🚤','🛳','⛴','🛥','🚢','✈','🛩','🛫','🛬','🚁','🚟','🚠','🚡','🛰','🚀','🛸','🌍','🌎','🌏','🌐','🗺','🗾','🏔','⛰','🗻','🏕','🏖','🏜','🏝','🏞','🏟','🏛','🏗','🏘','🏚','🏠','🏡','🏢','🏣','🏤','🏥','🏦','🏨','🏩','🏪','🏫','🏬','🏭','🏯','🏰','🗼','🗽','⛪','🕌','🕍','⛩','🕋','⛲','⛺','🏙','🎠','🎡','🎢','🎪','⛳','🗿','💦','🌋','🌁','🌃','🌄','🌅','🌆','🌇','🌉','🌌','🌑','🌒','🌓','🌔','🌕','🌖','🌗','🌘','🌙','🌚','🌛','🌜','🌡','☀','🌝','🌞','🌟','🌠','⛅','⛈','🌤','🌥','🌦','🌧','🌨','🌩','🌪','🌫','🌬','🌀','🌈','⛄','💧','🌊','🎑'];\nconst DEFAULT_EMOJI = '🔒';\n\nconst emoji = (value: string): string => {\n  const lettersWeightedSum = value.split('').reduce(\n    (acc, cur, index) =>\n      acc + cur.charCodeAt(0) * index, 0);\n  return EMOJI_LIST[lettersWeightedSum % EMOJI_LIST.length];\n};\n\ntype Props = {\n  secretData: SecretData,\n};\n\nexport const DataVisualizationBar: React.FC<Props> = ({\n  secretData: {\n    masterPassword,\n    domainName,\n    optionalSalt,\n  },\n}: Props) => styled`\n  |wrapper {\n    line-height: 2.6em;\n    font-size: 3.4em;\n    letter-spacing: 0.35em;\n    text-align: center;\n    width: 100%;\n  }\n`(\n  <use.wrapper>{\n    masterPassword === ''\n    ? new Array(3).fill(DEFAULT_EMOJI)\n    : domainName === ''\n      ? [\n        emoji(masterPassword),\n        DEFAULT_EMOJI,\n        DEFAULT_EMOJI,\n      ]\n      : [\n          emoji(masterPassword),\n          emoji(domainName + optionalSalt),\n          emoji(optionalSalt + domainName + 'shift'),\n        ]\n  }</use.wrapper>\n);\n\n","import React from 'react';\n// @ts-ignore\nimport styled, {use, css} from 'reshadow/macro';\n\ntype Props = {\n  text: string,\n};\n\nexport const Label: React.FC<Props> = ({\n  text,\n}: {\n  text: string,\n}) => styled`\n  |label {\n    color: var(--label-text-color);\n    margin-bottom: var(--indent3);\n  }\n`(\n  <use.label>\n    {text}\n  </use.label>\n);\n\nconst defaultMargin = css`\n  section {\n    margin-bottom: var(--indent5);\n  }\n`;\n\nexport const Section = ({\n  title,\n  style = defaultMargin,\n  children,\n}: {\n  title?: string,\n  style?: any,\n  children: React.ReactNode,\n}) => styled(style)`\n  section {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n`(\n  <section>\n    {\n      title && <Label text={title} />\n    }\n    {children}\n  </section>\n);\n","const INDENTS = [4, 8, 12, 16, 20, 24, 28];\n\nconst rootElement = document.querySelector(':root');\nexport const activateIndents = () => {\n  INDENTS.forEach((indent, i) => {\n    // @ts-ignore\n    rootElement.style.setProperty(`--indent${i+1}`, `${indent}px`);\n  });\n};\n\n","// @see https://css-tricks.com/converting-color-spaces-in-javascript/#article-header-id-11\n\nexport const HSL = (h: number, s: number, l: number) => {\n  s /= 100;\n  l /= 100;\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n      m = l - c/2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c; g = x; b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x; g = c; b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0; g = c; b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0; g = x; b = c;\n  } else if (240 <= h && h < 300) {\n    r = x; g = 0; b = c;\n  } else if (300 <= h && h < 360) {\n    r = c; g = 0; b = x;\n  }\n\n  // @ts-ignore\n  r = Math.round((r + m) * 255).toString(16);\n  // @ts-ignore\n  g = Math.round((g + m) * 255).toString(16);\n  // @ts-ignore\n  b = Math.round((b + m) * 255).toString(16);\n\n  // @ts-ignore\n  if (r.length === 1) {\n    // @ts-ignore\n    r = \"0\" + r;\n  }\n\n  // @ts-ignore\n  if (g.length === 1) {\n    // @ts-ignore\n    g = \"0\" + g;\n  }\n\n  // @ts-ignore\n  if (b.length === 1) {\n    // @ts-ignore\n    b = \"0\" + b;\n  }\n\n  return \"#\" + r + g + b;\n};\n","import {HSL} from './../utils/colorParser';\n\nconst COLOR_PALETTE = {\n  'background-color': {\n    dark: HSL(0, 0, 10),\n    light: HSL(0, 0, 95),\n  },\n  'copyright-meta-text-color': {\n    dark: HSL(0, 0, 38),\n    light: HSL(0, 0, 60),\n  },\n  'mainframe-color': {\n    dark: HSL(0, 0, 18),\n    light: HSL(0, 0, 85),\n  },\n  'input-default-color': {\n    dark: HSL(0, 0, 24),\n    light: HSL(0, 0, 80),\n  },\n  'input-active-color': {\n    dark: HSL(0, 0, 30),\n    light: HSL(0, 0, 70),\n  },\n  'input-default-text-color': {\n    dark: HSL(0, 0, 80),\n    light: HSL(0, 0, 33),\n  },\n  'input-neutral-text-color': {\n    dark: HSL(0, 0, 40),\n    light: HSL(0, 0, 60),\n  },\n  'label-text-color': {\n    dark: HSL(0, 0, 45),\n    light: HSL(0, 0, 45),\n  },\n  'salted-password-color': {\n    dark: HSL(0, 0, 15),\n    light: HSL(0, 0, 90),\n  },\n  'salted-password-text-color': {\n    dark: HSL(0, 0, 40),\n    light: HSL(0, 0, 65),\n  },\n  'slider-default-color': {\n    dark: HSL(0, 0, 24),\n    light: HSL(0, 0, 78),\n  },\n  'slider-active-color': {\n    dark: HSL(0, 0, 30),\n    light: HSL(0, 0, 70),\n  },\n  'slider-default-text-color': {\n    dark: HSL(0, 0, 45),\n    light: HSL(0, 0, 60),\n  },\n  'slider-active-text-color': {\n    dark: HSL(0, 0, 80),\n    light: HSL(0, 0, 33),\n  },\n};\n\nconst rootElement = document.querySelector(':root');\n\nexport const activatePalette = (paletteId: string) => {\n  Object.entries(COLOR_PALETTE).forEach(\n    ([entity, paletteIds]) => {\n      // TODO\n      // @ts-ignore\n      const color = paletteIds[paletteId];\n      // @ts-ignore\n      rootElement.style.setProperty(`--${entity}`, color);\n    }\n  );\n};\n","import React, {useState, useEffect} from 'react';\n// @ts-ignore\nimport styled, {use, css} from 'reshadow/macro';\n\nimport {\n  Input as OptionalSaltInput,\n  DomainNameInput,\n  MasterPasswordInput,\n  SaltedPassword,\n} from './widgets/textboxes';\nimport {Slider, Trigger} from './widgets/switch';\nimport {DataVisualizationBar} from './widgets/protection-bar';\nimport {Section} from './widgets/layout';\n\nimport {activateIndents} from './entities/indents';\nimport {activatePalette} from './entities/palette';\n\nimport {HASH_FUNCTIONS, DEFAULT_HASH_FUNCTION} from './utils/crypto';\nconst HASH_METHODS = Object.keys(HASH_FUNCTIONS);\n\nexport const App: React.FC = () => {\n  const [masterPassword, setMasterPassword] = useState<string>('');\n  const [domainName, setDomainName] = useState<string>('');\n  const [optionalSalt, setOptionalSalt] = useState<string>('');\n\n  const [hashMethod, setHashMethod] = useState<string>(\n    localStorage.getItem('hashMethod') || DEFAULT_HASH_FUNCTION\n  );\n  useEffect(() => { localStorage.setItem('hashMethod', hashMethod); });\n\n  const [DISABLED, ENABLED] = ['DISABLED', 'ENABLED'];\n  const toStorable = (flag: boolean): string => flag ? ENABLED : DISABLED;\n  const [isAutoCopyEnabled, setAutoCopy] = useState<boolean>(\n    localStorage.getItem('autoCopy') === ENABLED || false\n  );\n  useEffect(() => {\n    localStorage.setItem('autoCopy', toStorable(isAutoCopyEnabled));\n  });\n\n  const colorScheme = useDayLightTheme();\n  activatePalette(colorScheme);\n\n  activateIndents();\n\n  return styled`\n    :global(body) {\n      margin: 0;\n      font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI',\n        'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n        'Helvetica Neue', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      font-size: 12px;\n      background-color: var(--background-color);\n    }\n\n    |meta {\n      text-align: center;\n      color: var(--copyright-meta-text-color);\n      margin: var(--indent5) 0;\n    }\n\n    |meta a {\n      color: var(--copyright-meta-text-color);\n      text-decoration: none;\n    }\n\n    |fullFrameLayout {\n      min-height: 100vh;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    |container {\n      flex-wrap: wrap;\n      width: 100%;\n    }\n\n    @media only screen and (min-width: 440px)  {\n      |container {\n        max-width: 340px;\n      }\n    }\n\n    |mainframe {\n      width: 100%;\n      background-color: var(--mainframe-color);\n      padding: var(--indent5);\n      box-sizing: border-box;\n    }\n\n    @media only screen and (min-width: 440px)  {\n      |mainframe {\n        border-radius: 4px;\n      }\n    }\n  `(\n    <use.fullFrameLayout>\n      <use.container>\n        <use.meta>\n          <p>Clue Password Manager  |  <a\n            href='http://github.com/avdotion/clue'\n            target='_blank'\n            rel='noopener noreferrer'\n          >Source</a></p>\n        </use.meta>\n        <use.mainframe>\n          <Section title='Master Password'>\n            <MasterPasswordInput\n              value={masterPassword}\n              onChange={(newValue: string) => { setMasterPassword(newValue); }}\n            />\n          </Section>\n          <Section title='Domain Name'>\n            <DomainNameInput\n              value={domainName}\n              onChange={(newValue: string) => { setDomainName(newValue); }}\n            />\n          </Section>\n          <Section title='Salt (optional)'>\n            <OptionalSaltInput\n              value={optionalSalt}\n              onChange={(newValue: string) => { setOptionalSalt(newValue); }}\n            />\n          </Section>\n          <Section>\n            <Slider\n              options={HASH_METHODS}\n              value={hashMethod}\n              onSlide={(newValue: string) => { setHashMethod(newValue); }}\n            />\n            <Trigger\n              label={'autocopy'}\n              disabled={Boolean(!navigator.clipboard)}\n              disabledAlert={'AutoCopy isn\\'t supported by this browser'}\n              active={isAutoCopyEnabled}\n              onTrigger={(newValue) => { setAutoCopy(newValue); }}\n            />\n          </Section>\n          <Section>\n            <DataVisualizationBar\n              secretData={{masterPassword, domainName, optionalSalt}}\n            />\n          </Section>\n          <Section\n            title='Salted Password'\n            style={css`\n              section {\n                margin-bottom: 0;\n              }\n            `}\n          >\n            <SaltedPassword\n              secretData={{masterPassword, domainName, optionalSalt}}\n              hashMethodName={hashMethod}\n              isAutoCopyEnabled={isAutoCopyEnabled}\n            />\n          </Section>\n        </use.mainframe>\n      </use.container>\n    </use.fullFrameLayout>\n  );\n};\n\nconst useDayLightTheme = () => {\n  const isNightTime = matchMedia('(prefers-color-scheme: dark)').matches;\n  const [theme, setTheme] = useState<'dark' | 'light'>(\n    isNightTime ? 'dark' : 'light'\n  );\n\n  useEffect(() => {\n    matchMedia('(prefers-color-scheme: dark)').addListener(\n      e => e.matches && setTheme('dark')\n    );\n\n    matchMedia('(prefers-color-scheme: light)').addListener(\n      e => e.matches && setTheme('light')\n    );\n  });\n\n  return theme;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\n\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}