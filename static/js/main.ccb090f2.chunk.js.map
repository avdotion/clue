{"version":3,"sources":["components/Input.tsx","widgets/MasterPassword/view.tsx","widgets/MasterPassword/actions.ts","widgets/MasterPassword/index.ts","widgets/DomainName/view.tsx","widgets/DomainName/actions.ts","widgets/DomainName/index.ts","widgets/OptionalSalt/actions.ts","widgets/OptionalSalt/index.ts","components/Trigger.tsx","components/Slider.tsx","widgets/HashMethod/actions.ts","widgets/HashMethod/index.ts","widgets/AutoCopy/actions.ts","widgets/AutoCopy/index.ts","widgets/EmojiBar/view.tsx","widgets/EmojiBar/index.ts","utils/crypto.ts","widgets/SaltedPassword/view.tsx","widgets/SaltedPassword/index.ts","utils/localStorage.ts","components/Label.tsx","components/Section.tsx","entities/indents.ts","utils/colorParser.ts","entities/palette.ts","ClueApp.tsx","widgets/MasterPassword/reducer.ts","widgets/DomainName/reducer.ts","widgets/OptionalSalt/reducer.ts","widgets/HashMethod/reducer.ts","widgets/AutoCopy/reducer.ts","store/rootReducer.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["defaultTextBoxStyle","InnerInput","React","forwardRef","ref","type","onChange","value","autoFocus","e","target","setValue","createAction","newMasterPassword","mapDispatchToProps","setMasterPassword","connect","masterPassword","inputElement","useRef","current","focus","newDomainName","setDomainName","domainName","newOptionalSalt","inputChangeAction","inputValue","optionalSalt","checkBoxStyles","wrapper","clickablePannel","Option","active","label","onClick","undefined","chooseMethod","newHashMethod","chooseOption","hashMethod","currentOption","currentMethod","options","methods","map","option","index","trigger","isAutoCopyEnabled","isAutoCopyDisabled","Boolean","navigator","clipboard","onTrigger","isEnabled","autoCopy","isActive","disabled","disabledAlert","EMOJI_LIST","emoji","lettersWeightedSum","split","reduce","acc","cur","charCodeAt","length","Array","fill","CryptoES","require","default","Hashes","MD5","SHA3","prepareHash","hashName","rawMessage","toString","enc","Base64","replace","slice","key","saltThePassword","hash","hashedPassword","writeText","Label","text","defaultMargin","Section","title","style","children","INDENTS","rootElement","document","querySelector","HSL","h","s","l","c","Math","abs","x","m","r","g","b","round","COLOR_PALETTE","dark","light","useDayLightTheme","isNightTime","matchMedia","matches","useState","theme","setTheme","useEffect","addListener","produce","draft","action","getType","payload","localStorage","getItem","setItem","obtainHashMethod","storeHashMethod","availableMethods","Object","keys","fallbackHashMethod","initialState","newcurrentMethod","boolStorage","obtainAutoCopy","storeAutoCopy","combineReducers","MasterPasswordReducer","DomainNameReducer","OptionalSaltReducer","HashMethodReducer","AutoCopyReducer","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getElementById","render","paletteId","colorScheme","entries","forEach","entity","color","setProperty","indent","i","MasterPassword","DomainName","OptionalSalt","HashMethod","AutoCopy","EmojiBar","SaltedPassword","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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AAQ,mBMxD3C0B,EAAa,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAM,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,SAAI,eAAK,eAAK,SAAI,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,SAAI,e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","file":"static/js/main.ccb090f2.chunk.js","sourcesContent":["import React, {useRef} from 'react';\nimport styled, {use, css} from 'reshadow';\n\nexport const defaultTextBoxStyle = css`\n  |wrapper {\n    padding: var(--indent2) var(--indent5);\n    border-radius: 5px;\n    background-color: var(--input-default-color);\n    width: 100%;\n    display: flex;\n    overflow: hidden;\n    font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas,\n      'Courier New', monospace;\n    font-weight: 500;\n  }\n`;\n\ntype InnerInputProps = {\n  type?: string,\n  onChange: (value: string) => void,\n  value: string,\n  autoFocus?: boolean,\n};\n\nexport const InnerInput = React.forwardRef<HTMLInputElement, InnerInputProps>(({\n  type = 'text',\n  onChange,\n  value,\n  autoFocus,\n}, ref) => styled`\n  input {\n    line-height: 1.6em;\n    outline: none;\n    background: none;\n    border: 0;\n    color: var(--input-default-text-color);\n    align-items: center;\n    width: 100%;\n  }\n\n  input:required {\n    box-shadow: none;\n  }\n\n  input:invalid {\n      box-shadow: none;\n  }\n`(\n  <input\n    type={type}\n    onChange={onChange && (e => onChange(e.target.value))}\n    ref={ref}\n    value={value}\n    spellCheck={false}\n    autoFocus={autoFocus}\n  />\n));\n\ntype InputProps = {\n  inputChangeAction: (value: string) => void,\n  inputValue: string,\n};\n\nexport const Input: React.FC<InputProps> = ({\n  inputChangeAction,\n  inputValue,\n}: InputProps) => {\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  return styled(\n    defaultTextBoxStyle\n  )(\n    <use.wrapper onClick={() => {\n      inputElement.current && inputElement.current.focus();\n    }}>\n      <InnerInput\n        onChange={inputChangeAction}\n        value={inputValue}\n        ref={inputElement}\n      />\n    </use.wrapper>\n  );\n};\n","import React, {useRef} from 'react';\nimport styled, {use} from 'reshadow';\n\nimport {InnerInput, defaultTextBoxStyle} from '#/components/Input';\n\nimport {MasterPassword} from './types';\n\ntype DataProps = {\n  masterPassword: MasterPassword,\n};\n\ntype DispatchProps = {\n  setMasterPassword: (value: MasterPassword) => void,\n};\n\nexport default function MasterPasswordComponent ({\n  masterPassword,\n  setMasterPassword,\n}: DataProps & DispatchProps) {\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  return styled(\n    defaultTextBoxStyle\n  )(\n    <use.wrapper onClick={() => {\n        inputElement.current && inputElement.current.focus();\n      }}>\n      <InnerInput\n        type='password'\n        onChange={setMasterPassword}\n        value={masterPassword}\n        ref={inputElement}\n        autoFocus={true}\n      />\n    </use.wrapper>\n  );\n};\n","import {createAction} from 'typesafe-actions';\n\nimport {MasterPassword} from './types';\n\nexport const setValue = createAction(\n  '@MasterPassword/SET_VALUE',\n  (newMasterPassword: MasterPassword) => newMasterPassword\n)<MasterPassword>();\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\n\nimport View from './view';\nimport {setValue} from './actions';\n\nconst mapStateToProps = ({masterPassword: {value}}: RootState) => ({\n  masterPassword: value,\n});\n\nconst mapDispatchToProps = {\n  setMasterPassword: setValue,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View);\n","import React, {useRef} from 'react';\nimport styled, {use} from 'reshadow';\n\nimport {InnerInput, defaultTextBoxStyle} from '../../components/Input';\nimport {DomainName} from './types';\n\ntype DataProps = {\n  domainName: DomainName,\n};\n\ntype DispatchProps = {\n  setDomainName: (value: DomainName) => void,\n};\n\nexport default function DomainNameInput ({\n  domainName,\n  setDomainName,\n}: DataProps & DispatchProps) {\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  return styled(\n    defaultTextBoxStyle\n  )`\n    span {\n      line-height: 1.6em;\n      color: var(--input-neutral-text-color);\n    }\n  `(\n    <use.wrapper onClick={() => {\n        inputElement.current && inputElement.current.focus();\n      }}>\n        <span>https://</span>\n        <InnerInput\n          type='url'\n          onChange={setDomainName}\n          value={domainName}\n          ref={inputElement}\n        />\n    </use.wrapper>\n  );\n};\n","import {createAction} from 'typesafe-actions';\n\nimport {DomainName} from './types';\n\nexport const setValue = createAction(\n  '@DomainName/SET_VALUE',\n  (newDomainName: DomainName) => newDomainName\n)<DomainName>();\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\n\nimport View from './view';\nimport {setValue} from './actions';\n\nconst mapStateToProps = ({domainName: {value}}: RootState) => ({\n  domainName: value,\n});\n\nconst mapDispatchToProps = {\n  setDomainName: setValue,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View);\n","import {createAction} from 'typesafe-actions';\n\nimport {OptionalSalt} from './types';\n\nexport const setValue = createAction(\n  '@OptionalSalt/SET_VALUE',\n  (newOptionalSalt: OptionalSalt) => newOptionalSalt\n)<OptionalSalt>();\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\nimport {Input as View} from '#/components/Input';\n\nimport {setValue} from './actions';\n\nconst mapStateToProps = ({optionalSalt: {value}}: RootState) => ({\n  inputValue: value,\n});\n\nconst mapDispatchToProps = {\n  inputChangeAction: setValue,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View);\n","import React from 'react';\nimport styled, {use, css} from 'reshadow';\n\nexport const checkBoxStyles = {\n  wrapper: css`\n    |wrapper {\n      text-transform: uppercase;\n      font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas,\n        'Courier New', monospace;\n      font-weight: 500;\n      border-radius: 5px;\n      display: inline-block;\n      cursor: pointer;\n      background-color: var(--slider-default-color);\n      user-select: none;\n      margin-bottom: var(--indent4);\n    }\n  `,\n  clickablePannel: css`\n    |pane {\n      padding: var(--indent1) var(--indent4);\n      line-height: 1.6em;\n      display: inline-block;\n      border-radius: 5px;\n      color: var(--input-neutral-text-color);\n    }\n\n    |pane[active] {\n      background-color: var(--slider-active-color);\n      color: var(--slider-active-text-color);\n    }\n  `,\n};\n\ntype TriggerProps = {\n  disabled: boolean,\n  disabledAlert: string,\n  label: string,\n  isActive: boolean,\n  onTrigger: (value: boolean) => void,\n};\n\nexport default function Trigger ({\n  label,\n  onTrigger,\n  isActive,\n  disabled,\n  disabledAlert,\n}: TriggerProps) {\n  return styled(\n    checkBoxStyles.wrapper,\n    checkBoxStyles.clickablePannel\n  )`\n  |pane[disabled] {\n    cursor: not-allowed;\n  }\n  `(\n    <use.wrapper>\n      <use.pane\n        active={(isActive && !disabled) ? 'true' : undefined}\n        disabled={disabled}\n        onClick={() => { !disabled && onTrigger(!isActive); }}\n        title={disabled ? disabledAlert : ''}\n      >\n        {isActive ? label + ' Enabled' : label + ' Disabled'}\n      </use.pane>\n    </use.wrapper>\n  );\n};\n","import React from 'react';\nimport styled, {use} from 'reshadow';\n\nimport {checkBoxStyles} from '#/components/Trigger';\n\ntype OptionProps = ({\n  active: boolean,\n  label: string,\n  onClick: (option: string) => void,\n});\n\nconst Option: React.FC<OptionProps> = ({\n  active = false,\n  label,\n  onClick,\n}: OptionProps) => styled(\n  checkBoxStyles.clickablePannel\n)`\n  |pane[active] {\n    cursor: default;\n  }\n`(\n  <use.pane\n    active={active ? 'true' : undefined}\n    onClick={() => { onClick(label); }}\n  >\n    {label}\n  </use.pane>\n);\n\ntype SliderProps = {\n  options: readonly string[],\n  currentOption: string,\n  chooseOption: (option: string) => void,\n};\n\nexport default function Slider ({\n  options,\n  currentOption,\n  chooseOption,\n}: SliderProps) {\n  return styled(\n    checkBoxStyles.wrapper\n  )(\n    <use.wrapper>\n      { options.map((option, index) => (\n          <Option\n            key={index}\n            active={option === currentOption}\n            label={option}\n            onClick={chooseOption}\n          />\n        ))\n      }\n    </use.wrapper>\n  );\n};\n","import {createAction} from 'typesafe-actions';\n\nimport {HashMethod} from '#/utils/crypto';\n\nexport const chooseMethod = createAction(\n  '@HashMethod/CHOOSE_METHOD',\n  (newHashMethod: HashMethod) => newHashMethod\n)<HashMethod>();\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\nimport View from '#/components/Slider';\n\nimport {chooseMethod} from './actions';\n\nconst mapStateToProps = ({\n  hashMethod: {currentMethod, methods},\n}: RootState) => ({\n  currentOption: currentMethod,\n  options: methods,\n});\n\nconst mapDispatchToProps = {\n  chooseOption: chooseMethod,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View);\n","import {createAction} from 'typesafe-actions';\n\nimport {AutoCopy} from './types';\n\nexport const trigger = createAction(\n  '@AutoCopy/TRIGGER',\n  (isAutoCopyEnabled: AutoCopy) => isAutoCopyEnabled\n)<AutoCopy>();\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\nimport View from '#/components/Trigger';\n\nimport {trigger} from './actions';\n\nconst isAutoCopyDisabled = !Boolean(navigator && navigator.clipboard);\n\nconst mapStateToProps = ({\n  autoCopy: {isEnabled},\n}: RootState) => ({\n  isActive: !isAutoCopyDisabled && isEnabled,\n  label: 'autocopy',\n  disabled: isAutoCopyDisabled,\n  disabledAlert: 'AutoCopy isn\\'t supported by this browser',\n});\n\nconst mapDispatchToProps = {\n  onTrigger: trigger,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View);\n","import React from 'react';\nimport styled, {use} from 'reshadow';\n\nimport {MasterPassword} from '#/widgets/MasterPassword/types';\nimport {DomainName} from '#/widgets/DomainName/types';\nimport {OptionalSalt} from '#/widgets/OptionalSalt/types';\n\n// eslint-disable-next-line max-len\nconst EMOJI_LIST = ['😺','😸','😹','😻','😼','😽','🙀','😿','😾','🙈','🙉','🦝','🐵','🐒','🦍','🐶','🐕','🐩','🐺','🦊','🐱','🐈','🦁','🐯','🐅','🐆','🐴','🐎','🦄','🦓','🦌','🐮','🐂','🦙','🐃','🐄','🐷','🦛','🐖','🐗','🐽','🐏','🐑','🐐','🐪','🐫','🦒','🐘','🦏','🐭','🐁','🐀','🦘','🐹','🦡','🐰','🐇','🐿','🦔','🦇','🐻','🐨','🐼','🐾','🦃','🐔','🦢','🐓','🐣','🐤','🦚','🐥','🐦','🦜','🐧','🕊','🦅','🦆','🦉','🐸','🐊','🐢','🦎','🐍','🐲','🐉','🦕','🦖','🐳','🐋','🐬','🐟','🐠','🐡','🦈','🐙','🐚','🦀','🦟','🦐','🦠','🦑','🐌','🦋','🐛','🐜','🐝','🐞','🦗','🕷','🕸', '🦂','🦞','🌸','💮','🏵','🌹','🥀','🌺','🌻','🌼','🌷','🌱','🌲','🌳','🌴','🌵','🌾','🌿','☘','🍀','🍁','🍂','🍃','🍄','💅','👓','🕶','👔','👕','👖','🧣','🧤','🧥','🧦','👗','👘','👙','👚','👛','👜','👝','🛍','🎒','👞','👟','👠','👡','👢','👑','👒','🎩','🎓','🧢','⛑','📿','💄','🌂','☂','🎽','🥽','🥼','🥾','🥿','🧺','🚂','🚃','🚄','🚅','🚆','🚇','🚈','🚉','🚊','🚝','🚞','🚋','🚌','🚍','🚎','🚐','🚑','🚒','🚓','🚔','🚕','🚖','🚗','🚘','🚙','🚚','🚛','🚜','🚲','🛴','🛵','🚏','🛣','🛤','⛵','🛶','🚤','🛳','⛴','🛥','🚢','✈','🛩','🛫','🛬','🚁','🚟','🚠','🚡','🛰','🚀','🛸','🌍','🌎','🌏','🌐','🗺','🗾','🏔','⛰','🗻','🏕','🏖','🏜','🏝','🏞','🏟','🏛','🏗','🏘','🏚','🏠','🏡','🏢','🏣','🏤','🏥','🏦','🏨','🏩','🏪','🏫','🏬','🏭','🏯','🏰','🗼','🗽','⛪','🕌','🕍','⛩','🕋','⛲','⛺','🏙','🎠','🎡','🎢','🎪','⛳','🗿','💦','🌋','🌁','🌃','🌄','🌅','🌆','🌇','🌉','🌌','🌑','🌒','🌓','🌔','🌕','🌖','🌗','🌘','🌙','🌚','🌛','🌜','🌡','☀','🌝','🌞','🌟','🌠','⛅','⛈','🌤','🌥','🌦','🌧','🌨','🌩','🌪','🌫','🌬','🌀','🌈','⛄','💧','🌊','🎑'];\nconst DEFAULT_EMOJI = '🔒';\n\nconst emoji = (value: string): string => {\n  const lettersWeightedSum = value.split('').reduce(\n    (acc, cur, index) =>\n      acc + cur.charCodeAt(0) * index, 0);\n  return EMOJI_LIST[lettersWeightedSum % EMOJI_LIST.length];\n};\n\ntype Props = {\n  masterPassword: MasterPassword,\n  domainName: DomainName,\n  optionalSalt: OptionalSalt,\n};\n\nexport default function EmojiBarComponent ({\n  masterPassword,\n  domainName,\n  optionalSalt,\n}: Props) {\n  return styled`\n    |wrapper {\n      line-height: 2.6em;\n      font-size: 3.4em;\n      letter-spacing: 0.35em;\n      text-align: center;\n      width: 100%;\n    }\n  `(\n    <use.wrapper>{\n      masterPassword === ''\n      ? new Array(3).fill(DEFAULT_EMOJI)\n      : domainName === ''\n        ? [\n          emoji(masterPassword),\n          DEFAULT_EMOJI,\n          DEFAULT_EMOJI,\n        ]\n        : [\n            emoji(masterPassword),\n            emoji(domainName + optionalSalt),\n            emoji(optionalSalt + domainName + 'shift'),\n          ]\n    }</use.wrapper>\n  );\n}\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\n\nimport View from './view';\n\nconst mapStateToProps = ({\n  masterPassword,\n  domainName,\n  optionalSalt,\n}: RootState) => ({\n  masterPassword: masterPassword.value,\n  domainName: domainName.value,\n  optionalSalt: optionalSalt.value,\n});\n\nexport default connect(\n  mapStateToProps\n)(View);\n","const CryptoES = require('crypto-es').default;\n\nexport type HashMethod = string;\nexport type HashFunction = (rawMessage: string) => {\n  toString: (decoder: any) => string,\n};\n\nconst DEFAULT_HASH_LENGTH = 20;\nexport const Hashes: {[name: string]: HashFunction} = {\n  'MD5': CryptoES.MD5,\n  'SHA3': CryptoES.SHA3,\n};\n\nexport const prepareHash = (hashName: HashMethod) =>\n  (rawMessage: string) => Hashes[hashName](rawMessage)\n      .toString(CryptoES.enc.Base64)\n      .replace(/=+$/, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .slice(0, DEFAULT_HASH_LENGTH);\n","import React from 'react';\nimport styled, {use} from 'reshadow';\nimport * as clipboard from 'clipboard-polyfill';\n\nimport {MasterPassword} from '#/widgets/MasterPassword/types';\nimport {DomainName} from '#/widgets/DomainName/types';\nimport {OptionalSalt} from '#/widgets/OptionalSalt/types';\n\nimport {defaultTextBoxStyle} from '#/components/Input';\nimport {prepareHash} from '#/utils/crypto';\n\ntype SaltedPasswordProps = {\n  masterPassword: MasterPassword,\n  domainName: DomainName,\n  optionalSalt: OptionalSalt,\n\n  hashMethod: string,\n  isAutoCopyEnabled: boolean,\n};\n\nexport default function SaltedPasswordComponent ({\n  masterPassword,\n  domainName,\n  optionalSalt,\n  hashMethod,\n  isAutoCopyEnabled,\n}: SaltedPasswordProps) {\n  const saltThePassword = (\n    hash: (arg0: string) => string,\n    autoCopy: boolean\n  ): string => {\n    if (masterPassword.length === 0) {\n      return '';\n    }\n\n    const hashedPassword = hash(masterPassword + domainName + optionalSalt);\n\n    if (autoCopy) {\n      navigator.clipboard.writeText(hashedPassword);\n    }\n\n    return hashedPassword;\n  };\n\n  const copyToClipBoard = () => {\n    clipboard.writeText(\n      saltThePassword(\n        prepareHash(hashMethod),\n        isAutoCopyEnabled\n      )\n    );\n  };\n\n  return styled(\n    defaultTextBoxStyle\n  )`\n    |wrapper {\n      background-color: var(--salted-password-color);\n      color: var(--salted-password-text-color);\n      justify-content: center;\n    }\n    span {\n      min-height: 1.6em;\n      line-height: 1.6em;\n    }\n  `(\n    <use.wrapper\n      title={'Tap to copy to the clipboard'}\n      onClick={copyToClipBoard}\n    >\n      <span>\n        {\n          saltThePassword(\n            prepareHash(hashMethod),\n            isAutoCopyEnabled\n          )\n        }\n      </span>\n    </use.wrapper>\n  );\n}\n","import {connect} from 'react-redux';\n\nimport {RootState} from '#/store';\n\nimport View from './view';\n\nconst mapStateToProps = ({\n  masterPassword,\n  domainName,\n  optionalSalt,\n  autoCopy: {isEnabled: isAutoCopyEnabled},\n  hashMethod: {currentMethod},\n}: RootState) => ({\n  masterPassword: masterPassword.value,\n  domainName: domainName.value,\n  optionalSalt: optionalSalt.value,\n  isAutoCopyEnabled,\n  hashMethod: currentMethod,\n});\n\nexport default connect(\n  mapStateToProps\n)(View);\n","export const storage: (\n  // Because of TS issue\n  // @see https://github.com/microsoft/TypeScript/issues/32465\n  (key: string) => [\n    () => string | null,\n    (x: string) => void,\n  ]\n) = key => [\n  () => localStorage.getItem(key),\n  x => localStorage.setItem(key, x),\n];\n\nconst [DISABLED, ENABLED] = ['DISABLED', 'ENABLED'];\nexport const boolStorage: (\n  (key: string) => [\n    () => boolean,\n    (x: boolean) => void,\n  ]\n) = key => [\n  () => localStorage.getItem(key) === ENABLED,\n  x => localStorage.setItem(key, x ? ENABLED : DISABLED),\n];\n","import React from 'react';\nimport styled, {use} from 'reshadow';\n\ntype Props = {\n  text: string,\n};\n\nexport const Label: React.FC<Props> = ({\n  text,\n}: {\n  text: string,\n}) => styled`\n  |label {\n    color: var(--label-text-color);\n    margin-bottom: var(--indent3);\n  }\n`(\n  <use.label>\n    {text}\n  </use.label>\n);\n","import React from 'react';\nimport styled, {css} from 'reshadow';\nimport {Label} from '#/components/Label';\n\ntype Props = {\n  title?: string,\n  style?: any,\n  children: React.ReactNode,\n};\n\nconst defaultMargin = css`\n  section {\n    margin-bottom: var(--indent5);\n  }\n`;\n\nexport const Section: React.FC<Props> = ({\n  title,\n  style = defaultMargin,\n  children,\n}: Props) => styled(style)`\n  section {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n`(\n  <section>\n    {\n      title && <Label text={title} />\n    }\n    {children}\n  </section>\n);\n\nexport default Section;\n","const INDENTS = [4, 8, 12, 16, 20, 24, 28];\n\nconst rootElement = document.querySelector(':root');\nexport const activateIndents = () => {\n  INDENTS.forEach((indent, i) => {\n    // @ts-ignore\n    rootElement.style.setProperty(`--indent${i+1}`, `${indent}px`);\n  });\n};\n\n","// @see https://css-tricks.com/converting-color-spaces-in-javascript/#article-header-id-11\n\nexport const HSL = (h: number, s: number, l: number) => {\n  s /= 100;\n  l /= 100;\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n      m = l - c/2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c; g = x; b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x; g = c; b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0; g = c; b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0; g = x; b = c;\n  } else if (240 <= h && h < 300) {\n    r = x; g = 0; b = c;\n  } else if (300 <= h && h < 360) {\n    r = c; g = 0; b = x;\n  }\n\n  // @ts-ignore\n  r = Math.round((r + m) * 255).toString(16);\n  // @ts-ignore\n  g = Math.round((g + m) * 255).toString(16);\n  // @ts-ignore\n  b = Math.round((b + m) * 255).toString(16);\n\n  // @ts-ignore\n  if (r.length === 1) {\n    // @ts-ignore\n    r = \"0\" + r;\n  }\n\n  // @ts-ignore\n  if (g.length === 1) {\n    // @ts-ignore\n    g = \"0\" + g;\n  }\n\n  // @ts-ignore\n  if (b.length === 1) {\n    // @ts-ignore\n    b = \"0\" + b;\n  }\n\n  return \"#\" + r + g + b;\n};\n","import {HSL} from '#/utils/colorParser';\n\nconst COLOR_PALETTE = {\n  'background-color': {\n    dark: HSL(0, 0, 10),\n    light: HSL(0, 0, 95),\n  },\n  'copyright-meta-text-color': {\n    dark: HSL(0, 0, 38),\n    light: HSL(0, 0, 60),\n  },\n  'mainframe-color': {\n    dark: HSL(0, 0, 18),\n    light: HSL(0, 0, 85),\n  },\n  'input-default-color': {\n    dark: HSL(0, 0, 24),\n    light: HSL(0, 0, 80),\n  },\n  'input-active-color': {\n    dark: HSL(0, 0, 30),\n    light: HSL(0, 0, 70),\n  },\n  'input-default-text-color': {\n    dark: HSL(0, 0, 80),\n    light: HSL(0, 0, 33),\n  },\n  'input-neutral-text-color': {\n    dark: HSL(0, 0, 40),\n    light: HSL(0, 0, 60),\n  },\n  'label-text-color': {\n    dark: HSL(0, 0, 45),\n    light: HSL(0, 0, 45),\n  },\n  'salted-password-color': {\n    dark: HSL(0, 0, 15),\n    light: HSL(0, 0, 90),\n  },\n  'salted-password-text-color': {\n    dark: HSL(0, 0, 40),\n    light: HSL(0, 0, 65),\n  },\n  'slider-default-color': {\n    dark: HSL(0, 0, 24),\n    light: HSL(0, 0, 78),\n  },\n  'slider-active-color': {\n    dark: HSL(0, 0, 30),\n    light: HSL(0, 0, 70),\n  },\n  'slider-default-text-color': {\n    dark: HSL(0, 0, 45),\n    light: HSL(0, 0, 60),\n  },\n  'slider-active-text-color': {\n    dark: HSL(0, 0, 80),\n    light: HSL(0, 0, 33),\n  },\n};\n\nconst rootElement = document.querySelector(':root');\n\nexport const activatePalette = (paletteId: string) => {\n  Object.entries(COLOR_PALETTE).forEach(\n    ([entity, paletteIds]) => {\n      // TODO\n      // @ts-ignore\n      const color = paletteIds[paletteId];\n      // @ts-ignore\n      rootElement.style.setProperty(`--${entity}`, color);\n    }\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport styled, {use, css} from 'reshadow';\n\nimport MasterPassword from '#/widgets/MasterPassword';\nimport DomainName from '#/widgets/DomainName';\nimport OptionalSalt from '#/widgets/OptionalSalt';\nimport HashMethod from '#/widgets/HashMethod';\nimport AutoCopy from '#/widgets/AutoCopy';\nimport EmojiBar from '#/widgets/EmojiBar';\nimport SaltedPassword from '#/widgets/SaltedPassword';\n\nimport Section from '#/components/Section';\n\nimport {activateIndents} from '#/entities/indents';\nimport {activatePalette} from '#/entities/palette';\n\nexport const ClueApp: React.FC = () => {\n  const colorScheme = useDayLightTheme();\n  activatePalette(colorScheme);\n  activateIndents();\n\n  return styled`\n    :global(body) {\n      margin: 0;\n      font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI',\n        'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n        'Helvetica Neue', sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      font-size: 12px;\n      background-color: var(--background-color);\n    }\n\n    |meta {\n      text-align: center;\n      color: var(--copyright-meta-text-color);\n      margin: var(--indent5) 0;\n    }\n\n    |meta a {\n      color: var(--copyright-meta-text-color);\n      text-decoration: none;\n    }\n\n    |fullFrameLayout {\n      min-height: 100vh;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    |container {\n      flex-wrap: wrap;\n      width: 100%;\n    }\n\n    @media only screen and (min-width: 440px)  {\n      |container {\n        max-width: 340px;\n      }\n    }\n\n    |mainframe {\n      width: 100%;\n      background-color: var(--mainframe-color);\n      padding: var(--indent5);\n      box-sizing: border-box;\n    }\n\n    @media only screen and (min-width: 440px)  {\n      |mainframe {\n        border-radius: 4px;\n      }\n    }\n  `(\n    <use.fullFrameLayout>\n      <use.container>\n        <use.meta>\n          <p>Clue Password Manager  |  <a\n            href='http://github.com/avdotion/clue'\n            target='_blank'\n            rel='noopener noreferrer'\n          >Source</a></p>\n        </use.meta>\n        <use.mainframe>\n          <Section title='Master Password'>\n            <MasterPassword />\n          </Section>\n          <Section title='Domain Name'>\n            <DomainName />\n          </Section>\n          <Section title='Salt (optional)'>\n            <OptionalSalt />\n          </Section>\n          <Section>\n            <HashMethod />\n            <AutoCopy />\n          </Section>\n          <Section>\n            <EmojiBar />\n          </Section>\n          <Section\n            title='Salted Password'\n            style={css`\n              section {\n                margin-bottom: 0;\n              }\n            `}\n          >\n            <SaltedPassword />\n          </Section>\n        </use.mainframe>\n      </use.container>\n    </use.fullFrameLayout>\n  );\n};\n\nconst useDayLightTheme = () => {\n  const isNightTime = matchMedia('(prefers-color-scheme: dark)').matches;\n  const [theme, setTheme] = useState<'dark' | 'light'>(\n    isNightTime ? 'dark' : 'light'\n  );\n\n  useEffect(() => {\n    matchMedia('(prefers-color-scheme: dark)').addListener(\n      e => e.matches && setTheme('dark')\n    );\n\n    matchMedia('(prefers-color-scheme: light)').addListener(\n      e => e.matches && setTheme('light')\n    );\n  });\n\n  return theme;\n};\n","import {getType} from 'typesafe-actions';\nimport produce, {Draft} from 'immer';\n\nimport {setValue} from './actions';\nimport {State} from './types';\n\nconst initialState: State = {\n  value: '',\n};\n\nexport default produce((draft: Draft<State>, action) => {\n  switch (action.type) {\n    case getType(setValue): {\n      const newMasterPassword = action.payload;\n      draft.value = newMasterPassword;\n    }\n  }\n}, initialState);\n","import {getType} from 'typesafe-actions';\nimport produce, {Draft} from 'immer';\n\nimport {setValue} from './actions';\nimport {State} from './types';\n\nconst initialState: State = {\n  value: '',\n};\n\nexport default produce((draft: Draft<State>, action) => {\n  switch (action.type) {\n    case getType(setValue): {\n      const newDomainName = action.payload;\n      draft.value = newDomainName;\n    }\n  }\n}, initialState);\n","import {getType} from 'typesafe-actions';\nimport produce, {Draft} from 'immer';\n\nimport {setValue} from './actions';\nimport {State} from './types';\n\nconst initialState: State = {\n  value: '',\n};\n\nexport default produce((draft: Draft<State>, action) => {\n  switch (action.type) {\n    case getType(setValue): {\n      const newOptionalSalt = action.payload;\n      draft.value = newOptionalSalt;\n    }\n  }\n}, initialState);\n","import {getType} from 'typesafe-actions';\nimport produce, {Draft} from 'immer';\n\nimport {Hashes} from '#/utils/crypto';\nimport {storage} from '#/utils/localStorage';\n\nimport {chooseMethod} from './actions';\nimport {State} from './types';\n\nconst [obtainHashMethod, storeHashMethod] = storage('hashMethod');\nconst availableMethods = Object.keys(Hashes);\nconst fallbackHashMethod = availableMethods[1];\n\nconst initialState: State = {\n  currentMethod: obtainHashMethod() || fallbackHashMethod,\n  methods: availableMethods,\n};\n\nexport default produce((draft: Draft<State>, action) => {\n  switch (action.type) {\n    case getType(chooseMethod): {\n      const newcurrentMethod = action.payload;\n      storeHashMethod(newcurrentMethod);\n      draft.currentMethod = newcurrentMethod;\n    }\n  }\n}, initialState);\n","import {getType} from 'typesafe-actions';\nimport produce, {Draft} from 'immer';\n\nimport {boolStorage} from '#/utils/localStorage';\n\nimport {trigger} from './actions';\nimport {State} from './types';\n\nconst [obtainAutoCopy, storeAutoCopy] = boolStorage('autoCopy');\n\nconst initialState: State = {\n  isEnabled: obtainAutoCopy(),\n};\n\nexport default produce((draft: Draft<State>, action) => {\n  switch (action.type) {\n    case getType(trigger): {\n      const isAutoCopyEnabled = action.payload;\n      storeAutoCopy(isAutoCopyEnabled);\n      draft.isEnabled = isAutoCopyEnabled;\n    }\n  }\n}, initialState);\n","import {combineReducers} from 'redux';\n\nimport MasterPasswordReducer from '#/widgets/MasterPassword/reducer';\nimport DomainNameReducer from '#/widgets/DomainName/reducer';\nimport OptionalSaltReducer from '#/widgets/OptionalSalt/reducer';\nimport HashMethodReducer from '#/widgets/HashMethod/reducer';\nimport AutoCopyReducer from '#/widgets/AutoCopy/reducer';\n\nexport default combineReducers({\n  masterPassword: MasterPasswordReducer,\n  domainName: DomainNameReducer,\n  optionalSalt: OptionalSaltReducer,\n  hashMethod: HashMethodReducer,\n  autoCopy: AutoCopyReducer,\n});\n","import {createStore} from 'redux';\nimport {StateType} from 'typesafe-actions';\n\nimport rootReducer from './rootReducer';\n\nexport type RootState = StateType<ReturnType<typeof rootReducer>>;\n\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport 'normalize.css';\n\nimport {ClueApp} from './ClueApp';\nimport store from '#/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nrender(\n  <Provider store={store}>\n    <ClueApp />\n  </Provider>,\n  rootElement\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}