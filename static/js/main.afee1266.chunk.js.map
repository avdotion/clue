{"version":3,"sources":["widgets/label.tsx","widgets/input.tsx","widgets/switch.tsx","widgets/protection-bar.tsx","utils/crypto.ts","widgets/salted-password.tsx","entities/indents.ts","utils/colorParser.ts","entities/palette.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Label","text","defaultInputStyle","Input","label","onChange","value","inputElement","useRef","current","focus","e","target","MasterPasswordInput","DomainNameInput","toLowerCase","replace","checkBoxStyles","wrapper","clickablePannel","Option","active","onClick","Slider","options","onSlide","map","option","index","Trigger","onTrigger","disabled","disabledAlert","EMOJI_LIST","emoji","lettersWeightedSum","split","reduce","acc","cur","charCodeAt","length","DataVisualizationBar","secretData","masterPassword","domainName","optionalSalt","Array","fill","HASH_FUNCTIONS","CryptoES","MD5","SHA3","SaltedPassword","hashFunctionName","hashMethodName","isAutoCopyEnabled","hash","autoCopy","hashedPassword","navigator","clipboard","writeText","saltThePassword","rawMessage","toString","enc","Base64","slice","INDENTS","rootElement","document","querySelector","HSL","h","s","l","c","Math","abs","x","m","r","g","b","round","COLOR_PALETTE","dark","light","activatePalette","paletteId","Object","entries","forEach","entity","color","style","setProperty","activateDarkMode","activateLightMode","HASH_METHODS","keys","App","useState","patchSecretData","handleInput","field","newValue","window","localStorage","getItem","hashMethod","setHashMethod","triggerAutoCopy","indent","i","isDarkMode","matchMedia","matches","isLightMode","addListener","newHashMethod","setItem","Boolean","console","log","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.afee1266.chunk.js","sourcesContent":["import React from 'react';\n// @ts-ignore\nimport styled, {use} from 'reshadow/macro';\n\ntype Props = {\n  text: string,\n};\n\nexport const Label: React.FC<Props> = ({text}: Props) => styled`\n  |label {\n    color: var(--label-text-color);\n    margin-bottom: var(--indent3);\n  }\n`(\n  <use.label>\n    {text}\n  </use.label>\n);\n","import React, {useRef} from 'react';\n// @ts-ignore\nimport styled, {use, css} from 'reshadow/macro';\n\nimport {Label} from './label';\n\ntype InputProps = {\n  label: string,\n  onChange: (value: string) => void,\n  value: string,\n};\n\nconst defaultInputStyle = css`\n  |wrapper {\n    padding: var(--indent2) var(--indent5);\n    border-radius: 5px;\n    background-color: var(--input-default-color);\n    width: 100%;\n    display: flex;\n    overflow: hidden;\n    font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    font-weight: 500;\n  }\n\n  input {\n    line-height: 1.6em;\n    outline: none;\n    background: none;\n    border: 0;\n    color: var(--input-default-text-color);\n    align-items: center;\n    width: 100%;\n  }\n`;\n\nexport const Input: React.FC<InputProps> = ({label, onChange, value}: InputProps) => {\n  const inputElement = useRef(null);\n\n  return styled(\n    defaultInputStyle\n  )(\n      <>\n        <Label text={label} />\n        <use.wrapper onClick={() => {\n          // @ts-ignore\n          inputElement.current.focus();\n        }}>\n          <input\n            type='text'\n            onChange={e => onChange(e.target.value)}\n            value={value}\n            ref={inputElement}\n            spellCheck={false}\n          />\n        </use.wrapper>\n      </>\n    );\n};\n\n\n// const SYMBOLS = [':', ';', '!', '?', '¿', '–', '@', '*', '#', '¶', '§', `/`, `\\\\`, `⁄`, `ǀ`];\n// const seed: number = Math.floor(Math.random() * SYMBOLS.length);\n\n// const obfuscate = (value: string) => {\n//   let mess = '';\n//   for (let i = 0; i < value.length; ++i) {\n//     mess += SYMBOLS[(seed + i) % SYMBOLS.length];\n//   }\n//   return mess;\n// };\n\nexport const MasterPasswordInput: React.FC<InputProps> = ({label, onChange, value}: InputProps) => {\n  const inputElement = useRef(null);\n\n  return styled(\n    defaultInputStyle\n  )(\n    <>\n      <Label text={label} />\n        <use.wrapper onClick={() => {\n          // @ts-ignore\n          inputElement.current.focus();\n        }}>\n        <input\n          type='password'\n          onChange={e => onChange(e.target.value)}\n          value={value}\n          ref={inputElement}\n          autoFocus\n        />\n      </use.wrapper>\n    </>\n  );\n};\n\nconst transformUrl = (url: string): string => url.toLowerCase().replace(/http[s]?:\\/\\//g, '');\n\nexport const DomainNameInput: React.FC<InputProps> = ({label, onChange, value}: InputProps) => {\n  const inputElement = useRef(null);\n\n  return styled(\n    defaultInputStyle\n  )`\n    span {\n      line-height: 1.6em;\n      color: var(--input-neutral-text-color);\n    }\n  `(\n    <>\n      <Label text={label} />\n        <use.wrapper onClick={() => {\n          // @ts-ignore\n          inputElement.current.focus();\n        }}>\n          <span>https://</span>\n          <input\n          type='text'\n          onChange={e => onChange(transformUrl(e.target.value))}\n          value={value}\n          spellCheck={false}\n          ref={inputElement}\n        />\n      </use.wrapper>\n    </>\n  );\n};\n","import React from 'react';\n// @ts-ignore\nimport styled, {use, css} from 'reshadow/macro';\n\nconst checkBoxStyles = {\n  wrapper: css`\n    |wrapper {\n      text-transform: uppercase;\n      font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n      font-weight: 500;\n      border-radius: 5px;\n      display: inline-block;\n      cursor: pointer;\n      background-color: var(--slider-default-color);\n      user-select: none;\n    }\n  `,\n  clickablePannel: css`\n    |pane {\n      padding: var(--indent1) var(--indent4);\n      line-height: 1.6em;\n      display: inline-block;\n      border-radius: 5px;\n      color: var(--input-neutral-text-color);\n    }\n\n    |pane[active] {\n      background-color: var(--slider-active-color);\n      color: var(--slider-active-text-color);\n    }\n  `,\n};\n\ntype OptionProps = ({\n  active: boolean,\n  label: string,\n  onClick: (option: string) => void,\n});\n\nconst Option: React.FC<OptionProps> = ({active = false, label, onClick}: OptionProps) => styled(\n  checkBoxStyles.clickablePannel,\n)`\n  |pane[active] {\n    cursor: default;\n  }\n`(\n  <use.pane\n    active={active}\n    onClick={() => {onClick(label)}}\n  >\n    {label}\n  </use.pane>\n);\n\ntype SliderProps = {\n  value: string,\n  options: string[],\n  onSlide: (option: string) => void,\n};\n\nexport const Slider: React.FC<SliderProps> = ({options, value, onSlide}: SliderProps) => {\n  return styled(\n    checkBoxStyles.wrapper\n  )``(\n    <use.wrapper>\n      {\n        options.map((option, index) => (\n          <Option\n            key={index}\n            active={option === value}\n            label={option}\n            onClick={onSlide}\n          />\n        ))\n      }\n    </use.wrapper>\n  );\n};\n\ntype TriggerProps = {\n  disabled: boolean,\n  disabledAlert: string,\n  label: string,\n  active: boolean,\n  onTrigger: () => void,\n};\n\nexport const Trigger: React.FC<TriggerProps> = ({\n  label,\n  onTrigger,\n  active,\n  disabled,\n  disabledAlert,\n}: TriggerProps) => styled(\n  checkBoxStyles.wrapper,\n  checkBoxStyles.clickablePannel,\n)`\n|pane[disabled] {\n  cursor: not-allowed;\n}\n`(\n  <use.wrapper>\n    <use.pane\n      active={active && !disabled}\n      disabled={disabled}\n      onClick={() => { !disabled && onTrigger(); }}\n      title={disabled ? disabledAlert : ''}\n    >\n      {active ? label + ' Enabled' : label + ' Disabled'}\n    </use.pane>\n  </use.wrapper>\n);\n","import React from 'react';\n// @ts-ignore\nimport styled, {use} from 'reshadow/macro';\nimport {SecretData} from './../entities/secretData';\n\nconst EMOJI_LIST = ['😺','😸','😹','😻','😼','😽','🙀','😿','😾','🙈','🙉','🦝','🐵','🐒','🦍','🐶','🐕','🐩','🐺','🦊','🐱','🐈','🦁','🐯','🐅','🐆','🐴','🐎','🦄','🦓','🦌','🐮','🐂','🦙','🐃','🐄','🐷','🦛','🐖','🐗','🐽','🐏','🐑','🐐','🐪','🐫','🦒','🐘','🦏','🐭','🐁','🐀','🦘','🐹','🦡','🐰','🐇','🐿','🦔','🦇','🐻','🐨','🐼','🐾','🦃','🐔','🦢','🐓','🐣','🐤','🦚','🐥','🐦','🦜','🐧','🕊','🦅','🦆','🦉','🐸','🐊','🐢','🦎','🐍','🐲','🐉','🦕','🦖','🐳','🐋','🐬','🐟','🐠','🐡','🦈','🐙','🐚','🦀','🦟','🦐','🦠','🦑','🐌','🦋','🐛','🐜','🐝','🐞','🦗','🕷','🕸', '🦂','🦞','🌸','💮','🏵','🌹','🥀','🌺','🌻','🌼','🌷','🌱','🌲','🌳','🌴','🌵','🌾','🌿','☘','🍀','🍁','🍂','🍃','🍄','💅','👓','🕶','👔','👕','👖','🧣','🧤','🧥','🧦','👗','👘','👙','👚','👛','👜','👝','🛍','🎒','👞','👟','👠','👡','👢','👑','👒','🎩','🎓','🧢','⛑','📿','💄','🌂','☂','🎽','🥽','🥼','🥾','🥿','🧺','🚂','🚃','🚄','🚅','🚆','🚇','🚈','🚉','🚊','🚝','🚞','🚋','🚌','🚍','🚎','🚐','🚑','🚒','🚓','🚔','🚕','🚖','🚗','🚘','🚙','🚚','🚛','🚜','🚲','🛴','🛵','🚏','🛣','🛤','⛵','🛶','🚤','🛳','⛴','🛥','🚢','✈','🛩','🛫','🛬','🚁','🚟','🚠','🚡','🛰','🚀','🛸','🌍','🌎','🌏','🌐','🗺','🗾','🏔','⛰','🗻','🏕','🏖','🏜','🏝','🏞','🏟','🏛','🏗','🏘','🏚','🏠','🏡','🏢','🏣','🏤','🏥','🏦','🏨','🏩','🏪','🏫','🏬','🏭','🏯','🏰','🗼','🗽','⛪','🕌','🕍','⛩','🕋','⛲','⛺','🏙','🎠','🎡','🎢','🎪','⛳','🗿','💦','🌋','🌁','🌃','🌄','🌅','🌆','🌇','🌉','🌌','🌑','🌒','🌓','🌔','🌕','🌖','🌗','🌘','🌙','🌚','🌛','🌜','🌡','☀','🌝','🌞','🌟','🌠','⛅','⛈','🌤','🌥','🌦','🌧','🌨','🌩','🌪','🌫','🌬','🌀','🌈','⛄','💧','🌊','🎑'];\nconst DEFAULT_EMOJI = '🔒';\n\nconst emoji = (value: string): string => {\n  const lettersWeightedSum = value.split('').reduce(\n    (acc, cur, index) =>\n      acc + cur.charCodeAt(0) * index, 0);\n  return EMOJI_LIST[lettersWeightedSum % EMOJI_LIST.length];\n}\n\ntype Props = {\n  secretData: SecretData,\n};\n\nexport const DataVisualizationBar: React.FC<Props> = ({\n  secretData: {\n    masterPassword,\n    domainName,\n    optionalSalt,\n  },\n}: Props) => styled`\n  |wrapper {\n    line-height: 2.6em;\n    font-size: 3.4em;\n    letter-spacing: 0.35em;\n    text-align: center;\n    width: 100%;\n  }\n`(\n  <use.wrapper>{\n    masterPassword === ''\n    ? new Array(3).fill(DEFAULT_EMOJI)\n    : domainName === ''\n      ? [\n        emoji(masterPassword),\n        DEFAULT_EMOJI,\n        DEFAULT_EMOJI\n      ]\n      : [\n          emoji(masterPassword),\n          emoji(domainName + optionalSalt),\n          emoji(optionalSalt + domainName + 'shift')\n        ]\n  }</use.wrapper>\n);\n\n","// @ts-ignore\nimport CryptoES from 'crypto-es';\n\nconst DEFAULT_HASH_LENGTH: number = 20;\nexport const DEFAULT_HASH_FUNCTION: string = 'SHA3';\nexport const HASH_FUNCTIONS = {\n  'MD5': CryptoES.MD5,\n  'SHA3': CryptoES.SHA3,\n};\n\nexport const prepareHash = (hashFunctionName: string) => (rawMessage: string) =>\n  // @ts-ignore\n  HASH_FUNCTIONS[hashFunctionName](rawMessage)\n      .toString(CryptoES.enc.Base64)\n      .replace(/=+$/, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .slice(0, DEFAULT_HASH_LENGTH);\n","import React from 'react';\n// @ts-ignore\nimport styled, {use} from 'reshadow/macro';\n\nimport {SecretData} from  './../entities/secretData';\nimport {prepareHash} from './../utils/crypto';\nimport {Label} from './label';\n\ntype Props = {\n  secretData: SecretData,\n  hashMethodName: string,\n  isAutoCopyEnabled: boolean,\n};\n\nconst saltThePassword = (\n  secretData: SecretData,\n  hash: (arg0: string) => string,\n  autoCopy: boolean\n): string => {\n  const {masterPassword, domainName, optionalSalt} = secretData;\n\n  if (masterPassword.length === 0) {\n    return '';\n  }\n\n  const hashedPassword = hash(masterPassword + domainName + optionalSalt);\n\n  if (autoCopy) {\n    navigator.clipboard.writeText(hashedPassword);\n  }\n\n  return hashedPassword;\n}\n\nexport const SaltedPassword: React.FC<Props> = ({secretData, hashMethodName, isAutoCopyEnabled}: Props) => styled`\n  |wrapper {\n    height: 42px;\n    width: 100%;\n    background-color: var(--salted-password-color);\n    color: var(--salted-password-text-color);\n    font-family: 'Roboto Mono', source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    overflow: hidden;\n    border-radius: 5px;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`(\n  <>\n    <Label text={'Salted Password'} />\n    <use.wrapper>\n      <span>\n        {\n          saltThePassword(secretData, prepareHash(hashMethodName), isAutoCopyEnabled)\n        }\n      </span>\n    </use.wrapper>\n  </>\n);\n","const INDENTS = [4, 8, 12, 16, 20, 24, 28];\n\nconst rootElement = document.querySelector(':root');\nexport const useIndents = () => {\n  INDENTS.forEach((indent, i) => {\n    // @ts-ignore\n    rootElement.style.setProperty(`--indent${i+1}`, `${indent}px`);\n  });\n};\n\n","// @see https://css-tricks.com/converting-color-spaces-in-javascript/#article-header-id-11\n\nexport const HSL = (h: number, s: number, l: number) => {\n  s /= 100;\n  l /= 100;\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n      m = l - c/2,\n      r = 0,\n      g = 0,\n      b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c; g = x; b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x; g = c; b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0; g = c; b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0; g = x; b = c;\n  } else if (240 <= h && h < 300) {\n    r = x; g = 0; b = c;\n  } else if (300 <= h && h < 360) {\n    r = c; g = 0; b = x;\n  }\n\n  // @ts-ignore\n  r = Math.round((r + m) * 255).toString(16);\n  // @ts-ignore\n  g = Math.round((g + m) * 255).toString(16);\n  // @ts-ignore\n  b = Math.round((b + m) * 255).toString(16);\n\n  // @ts-ignore\n  if (r.length === 1) {\n    // @ts-ignore\n    r = \"0\" + r;\n  }\n\n  // @ts-ignore\n  if (g.length === 1) {\n    // @ts-ignore\n    g = \"0\" + g;\n  }\n\n  // @ts-ignore\n  if (b.length === 1) {\n    // @ts-ignore\n    b = \"0\" + b;\n  }\n\n  return \"#\" + r + g + b;\n}\n","import {HSL} from './../utils/colorParser';\n\nconst COLOR_PALETTE = {\n  'background-color': {\n    dark: HSL(0, 0, 10),\n    light: HSL(0, 0, 95),\n  },\n  'copyright-meta-text-color': {\n    dark: HSL(0, 0, 38),\n    light: HSL(0, 0, 60),\n  },\n  'mainframe-color': {\n    dark: HSL(0, 0, 18),\n    light: HSL(0, 0, 85),\n  },\n  'input-default-color': {\n    dark: HSL(0, 0, 24),\n    light: HSL(0, 0, 80),\n  },\n  'input-active-color': {\n    dark: HSL(0, 0, 30),\n    light: HSL(0, 0, 70),\n  },\n  'input-default-text-color': {\n    dark: HSL(0, 0, 80),\n    light: HSL(0, 0, 33),\n  },\n  'input-neutral-text-color': {\n    dark: HSL(0, 0, 40),\n    light: HSL(0, 0, 60),\n  },\n  'label-text-color': {\n    dark: HSL(0, 0, 45),\n    light: HSL(0, 0, 45),\n  },\n  'salted-password-color': {\n    dark: HSL(0, 0, 15),\n    light: HSL(0, 0, 90),\n  },\n  'salted-password-text-color': {\n    dark: HSL(0, 0, 40),\n    light: HSL(0, 0, 65),\n  },\n  'slider-default-color': {\n    dark: HSL(0, 0, 24),\n    light: HSL(0, 0, 78),\n  },\n  'slider-active-color': {\n    dark: HSL(0, 0, 30),\n    light: HSL(0, 0, 70),\n  },\n  'slider-default-text-color': {\n    dark: HSL(0, 0, 45),\n    light: HSL(0, 0, 60),\n  },\n  'slider-active-text-color': {\n    dark: HSL(0, 0, 80),\n    light: HSL(0, 0, 33),\n  },\n};\n\nconst rootElement = document.querySelector(':root');\n\nexport const activatePalette = (paletteId: string) => () => {\n  Object.entries(COLOR_PALETTE).forEach(\n    ([entity, paletteIds]) => {\n      // TODO\n      // @ts-ignore\n      const color = paletteIds[paletteId];\n      // @ts-ignore\n      rootElement.style.setProperty(`--${entity}`, color);\n    }\n  );\n}\n","import React, {useState} from 'react';\n// @ts-ignore\nimport styled, {use} from 'reshadow/macro';\n\nimport {SecretData} from './entities/secretData';\nimport {Input as OptionalSaltInput, DomainNameInput, MasterPasswordInput} from './widgets/input';\nimport {Slider, Trigger} from './widgets/switch';\nimport {DataVisualizationBar} from './widgets/protection-bar';\nimport {SaltedPassword} from './widgets/salted-password';\n\nimport {useIndents} from './entities/indents';\nimport {activatePalette} from './entities/palette';\nimport {HASH_FUNCTIONS, DEFAULT_HASH_FUNCTION} from './utils/crypto';\n\nconst activateDarkMode = activatePalette('dark');\nconst activateLightMode = activatePalette('light');\nconst HASH_METHODS = Object.keys(HASH_FUNCTIONS);\n\nconst App: React.FC = () => {\n  const [secretData, patchSecretData] = useState<SecretData>({\n    masterPassword: '',\n    domainName: '',\n    optionalSalt: '',\n  });\n\n  const handleInput = (field: string) => (newValue: string) => {\n    patchSecretData({\n      ...secretData,\n      [field]: newValue,\n    });\n  };\n\n  const [hashMethod, setHashMethod] = useState<string>(\n    window.localStorage.getItem('hashMethod') || DEFAULT_HASH_FUNCTION\n  );\n  const handleSlider = (newHashMethod: string) => {\n    window.localStorage.setItem('hashMethod', newHashMethod);\n    setHashMethod(newHashMethod);\n  }\n\n  const [isAutoCopyEnabled, triggerAutoCopy] = useState<boolean>(\n    window.localStorage.getItem('isAutoCopyEnabled') === 'enabled' || false\n  );\n  const handleTrigger = () => {\n    window.localStorage.setItem('isAutoCopyEnabled', !isAutoCopyEnabled ? 'enabled' : 'disabled');\n    triggerAutoCopy(!isAutoCopyEnabled);\n    console.log(typeof isAutoCopyEnabled);\n  }\n\n  useIndents();\n  const isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches\n  const isLightMode = window.matchMedia('(prefers-color-scheme: light)').matches\n\n  window.matchMedia('(prefers-color-scheme: dark)').addListener(e => e.matches && activateDarkMode())\n  window.matchMedia('(prefers-color-scheme: light)').addListener(e => e.matches && activateLightMode())\n\n  if (isDarkMode) {\n    activateDarkMode();\n  }\n  if (isLightMode) {\n    activateLightMode();\n  }\n\n  return styled`\n    :global(body) {\n      margin: 0;\n      font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n        sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      font-size: 12px;\n      background-color: var(--background-color);\n    }\n\n    |meta {\n      text-align: center;\n      color: var(--copyright-meta-text-color);\n      margin: var(--indent5) 0;\n    }\n\n    |meta a {\n      color: var(--copyright-meta-text-color);\n      text-decoration: none;\n    }\n\n    :global(#root) {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: 100vh;\n    }\n\n    |mainframe {\n      max-width: 340px;\n      width: 100%;\n      background-color: var(--mainframe-color);\n      padding: var(--indent5);\n      border-radius: 4px;\n    }\n\n    |field {\n      margin-bottom: var(--indent5);\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    }\n\n    |field:last-child {\n      margin: 0;\n    }\n  `(\n    <div className='App'>\n      <use.meta>\n        <p>Clue Password Manager  |  <a href='http://github.com/avdotion/clue' target='_blank' rel='noopener noreferrer'>Source</a></p>\n      </use.meta>\n      <use.mainframe>\n        <use.field>\n          <MasterPasswordInput\n            label='Master Password'\n            value={secretData.masterPassword}\n            onChange={handleInput('masterPassword')}\n          />\n        </use.field>\n        <use.field>\n          <DomainNameInput\n            label='Domain Name'\n            value={secretData.domainName}\n            onChange={handleInput('domainName')}\n            />\n        </use.field>\n        <use.field>\n          <OptionalSaltInput\n            label='Salt (optional)'\n            value={secretData.optionalSalt}\n            onChange={handleInput('optionalSalt')}\n          />\n        </use.field>\n        <use.field>\n          <Slider\n            options={HASH_METHODS}\n            value={hashMethod}\n            onSlide={handleSlider}\n          />\n          <Trigger\n            label={'autocopy'}\n            disabled={Boolean(!navigator.clipboard)}\n            disabledAlert={'AutoCopy isn\\'t supported by this browser'}\n            active={isAutoCopyEnabled}\n            // @ts-ignore\n            onTrigger={handleTrigger}\n          />\n        </use.field>\n        <use.field>\n          <DataVisualizationBar\n            secretData={secretData}\n          />\n        </use.field>\n        <use.field>\n          <SaltedPassword\n            secretData={secretData}\n            hashMethodName={hashMethod}\n            isAutoCopyEnabled={isAutoCopyEnabled}\n          />\n        </use.field>\n      </use.mainframe>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}